

config:
  prepend-paths:
    - windows: c:/Program Files/PowerShell/7
    - /usr/local/bin

  env:
    PROJECT_DIR: "${XTASK_DIR}../../"
    XTASK_POWERSHELL_EXE: "/usr/local/bin/pwsh"

hosts:
  vm1:
    host: "192.168.122.236"
    user: "dev_user"
    groups: ["dev", "admins"]

env:
  - AUTO="tesla"
  - name: TEST
    value: "This is a test"

tasks:
  test:
    uses: "powershell"
    run: |
      echo "$env:XTASK_POWERSHELL_EXE"
      echo "$env:TEST"
      Write-Host "Hello $($env:AUTO)"

  blank:
    needs: [test]

  echo: "echo"

  set-env:
    uses: "bash"
    run: |
      echo "$XTASK_ENV"
      echo "$XTASK_PATH"
      echo 'NEW_VAR=Hello World' >> $XTASK_ENV
      echo 'SECOND_VAR=Hello Again' >> $XTASK_ENV
      echo "$HOME/.local/bin" >> $XTASK_PATH

  view-env:
    uses: "bash"
    run: |
      echo "Environment Variables:"
      echo "$NEW_VAR"
      echo "$SECOND_VAR"
      echo "PATH: $PATH"
    needs: [set-env]

  validate-cwd:
    uses: "bash"
    run: |
      echo "$PWD"
    cwd: "${XTASK_DIR}/local"

  default:
    uses: "bash"
    run: |
      echo "Hello Nurse from $ENV_TEST"
    needs: [test]
    with:
      files:
        - "./local/x.yaml:./x.yaml"
      test: "value"
      test2:
        - 1023
      bad:
        nested:
          - should: "fail"

  bun:
    uses: "bun"
    run: console.log("Hello Bun")

  ruby:
    uses: "ruby"
    run: |
      puts "Hello Ruby"
      puts "Car, #{ENV['AUTO']}, is ready to go!"s

  python:
    uses: "python"
    run: |
      print("Hello Python")

  ssh:
    uses: "ssh"
    desc: "uses ssh to connect to a remote host"
    hosts: ["dev"]
    env:
      LC_AUTO: "${AUTO}"
    run: |
      uptime
      echo "${HOSTNAME} is up"
      echo "Car: ${LC_AUTO}, is ready to go!"

  scp:
    uses: "scp://user@192.168.122.236"
    desc: "uses scp to copy a file to a remote host"
    with:
      files:
        - "./local/x.yaml:./x.yaml"

  docker:
    uses: "docker"
    run: test/test # This is a comment

  build:before: 'echo "This runs before the build task"'

  build:
    run: |
      echo "building..."

  tmpl:
    uses: tmpl
    if: '{{ eq .os "windows" }}'
    with:
      files:
        - "./local/temp.tmpl:./local/temp.txt"